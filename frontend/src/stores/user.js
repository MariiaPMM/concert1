// stores/user.js
import { defineStore } from 'pinia'
import authService from '@/services/authService'

export const useUserStore = defineStore('user', {
  state: () => ({
    token: null,
    profile: null,
    isLoadingProfile: false,
  }),

  getters: {
    isLogged: (s) => !!s.token && !!s.profile,
    getAuthHeader: (s) =>
      s.token && s.token !== 'null' ? { Authorization: `Bearer ${s.token}` } : {},
  },

  actions: {
    setToken(token) {
      this.token = token
      localStorage.setItem('token', token)
      console.log('‚úÖ Token –∑–±–µ—Ä–µ–∂–µ–Ω–æ:', token)
      
    },

    setProfile(profile) {
      this.profile = profile
      console.log('‚úÖ –ü—Ä–æ—Ñ—ñ–ª—å –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:', profile)
    },

    clearAll() {
      console.log('üö´ –û—á–∏—â–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞ —ñ –ø—Ä–æ—Ñ—ñ–ª—é')
      this.token = null
      this.profile = null
      localStorage.removeItem('token')
    },

    async initFromLocalStorage() {
      const storedToken = localStorage.getItem('token')
      console.log('üîê Token –∑ localStorage:', storedToken)

      if (!storedToken || storedToken === 'null') {
        console.warn('‚ùó –¢–æ–∫–µ–Ω –≤—ñ–¥—Å—É—Ç–Ω—ñ–π –∞–±–æ null ‚Äî –≤–∏—Ö—ñ–¥ —ñ–∑ init')
        return
      }

      this.token = storedToken
      try {
        this.isLoadingProfile = true
        const res = await authService.getProfile()
        this.profile = res.data
        console.log('üë§ –ü—Ä–æ—Ñ—ñ–ª—å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ:', this.profile)
      } catch (e) {
        console.warn('‚ùå Token –Ω–µ–¥—ñ–π—Å–Ω–∏–π –∞–±–æ –∑–∞–ø–∏—Ç –Ω–µ –≤–¥–∞–≤—Å—è:', e)

        // üëâ –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ ‚Äî —Ç–∏–º—á–∞—Å–æ–≤–æ –∫–æ–º–µ–Ω—Ç—É–π –æ—á–∏—â–µ–Ω–Ω—è
        this.clearAll()
      } finally {
        this.isLoadingProfile = false
      }
    },
  },
})
